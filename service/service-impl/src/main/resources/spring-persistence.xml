<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd


		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<description>持久化相关配置</description>
	
	<bean id="ksh.data.source.druid.logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
		<property name="statementExecutableSqlLogEnable" value="false" />
	</bean>

	<!-- 分页插件 -->
	<bean id="ksh.mybatis.page.interceptor" class="com.github.pagehelper.PageInterceptor">
		<property name="properties">
			<props>
				<!-- 分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），会查询最后一页。默认false 
					时，直接根据参数进行查询。 -->
				<prop key="reasonable">false</prop>
				<!-- 默认值为 false，该参数对使用 RowBounds 作为分页参数时有效。 当该参数设置为 true 时，会将 RowBounds 
					中的 offset 参数当成 pageNum 使用，可以用页码和页面大小两个参数进行分页。 -->
				<prop key="offsetAsPageNum">true</prop>
				<!-- 默认值为false，该参数对使用 RowBounds 作为分页参数时有效。 当该参数设置为true时，使用 RowBounds 
					分页会进行 count 查询。 -->
				<prop key="rowBoundsWithCount">true</prop>
			</props>
		</property>
	</bean>

	<!-- 合同物流管理平台主库 ====== 数据库连接池 -->
	<bean id="ksh.data.source.db-service" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<!-- 数据库基本信息配置 -->
		<property name="url" value="${data.source.jdbc.url}" />
		<property name="username" value="${data.source.jdbc.username}" />
		<property name="password" value="${data.source.jdbc.password}" />
		<property name="driverClassName" value="${data.source.jdbc.driver}" />
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="${data.source.jdbc.maxActive}" />
		<!-- 初始化连接数量 -->
		<property name="initialSize" value="${data.source.jdbc.initialSize}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${data.source.jdbc.maxWait}" />
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="${data.source.jdbc.minIdle}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="proxyFilters">
			<list>
				<ref bean="ksh.data.source.druid.logFilter" />
			</list>
		</property>
	</bean>

	<!-- 合同物流管理平台主库 ====== 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="ksh.sql.session.factory.db-service" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ksh.data.source.db-service" />
		<property name="mapperLocations" value="classpath*:mappers/**/*.xml" />
		<property name="configurationProperties">
			<props>
				<!-- 全局映射器启用缓存 -->
				<prop key="cacheEnabled">true</prop>
				<!-- 查询时，关闭关联对象即时加载以提高性能 -->
				<prop key="lazyLoadingEnabled">true</prop>
				<!-- 设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指 定)，不会加载关联表的所有字段，以提高性能 -->
				<prop key="aggressiveLazyLoading">false</prop>
				<!-- 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果 -->
				<prop key="multipleResultSetsEnabled">true</prop>
				<!-- 允许使用列标签代替列名 -->
				<prop key="useColumnLabel">true</prop>
				<!-- 允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖 -->
				<prop key="useGeneratedKeys">false</prop>
				<!-- 给予被嵌套的resultMap以字段-属性的映射支持 -->
				<prop key="autoMappingBehavior">FULL</prop>
				<!-- 对于批量更新操作缓存SQL以提高性能 -->
				<prop key="defaultExecutorType">SIMPLE</prop>
				<!-- 数据库超过25000秒仍未响应则超时 -->
				<prop key="defaultStatementTimeout">25000</prop>
				<!-- 打印sql日志 -->
				<prop key="logImpl">SLF4J</prop>
			</props>
		</property>
		<property name="plugins">
			<list>
				<ref bean="ksh.mybatis.page.interceptor" />
			</list>
		</property>
	</bean>

	<!-- 合同物流管理平台主库 ====== 配置事务管理器 -->
	<bean id="ksh.transaction.manager.db-service"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ksh.data.source.db-service" />
	</bean>

	<!-- 合同物流管理平台主库 ====== 配置事务 -->
	<tx:advice id="ksh.transaction.advice.db-service" transaction-manager="ksh.transaction.manager.db-service">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" rollback-for="com.ycg.ksh.common.exception.BusinessException" />
			<!--
			<tx:method name="update*" propagation="REQUIRED" rollback-for="BusinessException" />
			<tx:method name="modify*" propagation="REQUIRED" rollback-for="BusinessException" />
			<tx:method name="edit*" propagation="REQUIRED" rollback-for="BusinessException" />
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="BusinessException" />
			<tx:method name="save*" propagation="REQUIRED" rollback-for="BusinessException" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="BusinessException" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="BusinessException" />
			<tx:method name="remove*" propagation="REQUIRED" rollback-for="BusinessException" />
			-->
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!--  合同物流管理平台主库=====事物切面 -->
		<aop:pointcut id="ksh.transaction.aop.pointcut.service" expression="execution (* com.ycg.ksh.service.impl.*.*(..))" />
		<aop:advisor advice-ref="ksh.transaction.advice.db-service" pointcut-ref="ksh.transaction.aop.pointcut.service" />
	</aop:config>
	
	<!-- 扫描Mapper并自动注入 -->
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="ksh.sql.session.factory.db-service" />
		<property name="basePackage" value="com.ycg.ksh.service.persistence" />
		<property name="properties">
			<props>
				<prop key="mappers">tk.mybatis.mapper.common.Mapper,com.ycg.ksh.common.extend.mybatis.CustomMapper</prop>
				<prop key="notEmpty">false</prop>
				<prop key="IDENTITY">MYSQL</prop>
			</props>
		</property>
	</bean>
	
</beans>